<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkK
        DA8MCgsOCwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCAAoAKIDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiikZlRS7MAqjJJ7CgBs00UEbTTSLHGgyzMcAD3Jrj
        Lv43/Bqwvjpt98VvCVvdq20wSazbq4PptL5r5AvPG3ij9t348Xvwz0fX73Svhd4e3S3y2bNG2oxI4UFz
        3MjfdVuFUE43CvrnQvgP8GfDekDQ9K+F/hlLTZ5brLpkMrSjGPnd1LOfdia9SvgaWBUY4lvnavyron3b
        6+VvmcFLFVMU3KglyrS76+i7eZ00fizwvNFazw+ItNeO+lENq63SETyEEhUOfmJAJwPQ1ek1Cwhuo7Ga
        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
        igD/2Q==
</value>
  </data>
</root>